#include <stdio.h>
#include <stdlib.h>
#include <dos.h>
#include <Windows.h>
#define DEAL	50	/*设计最大交易次数*/

struct Date
{
    int da_year;  //年
    int da_mon;  //月
    int da_day;  //日
};
struct Time
{
    int ti_hour;   //小时
    int ti_min;   //分钟
    int ti_sec;    //秒
};
struct deal
{
    Date dt;						/*每笔交易的日期*/
    Time ti;						/*每笔交易的时间*/
    double earning;						/*每笔交易的收入额度*/
    double payout;						/*每笔交易的支出额度*/
};
typedef struct deal FINANCE;
FINANCE person[DEAL] = { 0 };    //存放用户每笔的交易信息

void getdate(Date* pd);//已实现，如下所示。获取系统日期，存入pd所指的Date结构体中
void gettime(Time* pt);// 已实现，如下所示。获取系统时间，存入pt所指的Time结构体中
void GetDateTime(FINANCE* per); //调用getdate与gettime函数将获取的时间日期存入per所指的结构体变量中
void Menu();  //显示系统菜单
char bioskey(); //返回用户输入的菜单命令
void InputOneDeal(FINANCE* per);  //执行菜单命令1，输入一笔交易，存入结构体per所指的结构体变量中。注意当输入为整数的时候存入earning中，输入为负数的时候存入payout中。
double Balance(FINANCE* per);  //返回账户中余额。账户person数组中的所有收入与支出之差。
void OneYearBalance(FINANCE* per, int year); //打印某一年的交易信息统计
void PrintBalance(FINANCE* per);  //执行菜单命令2，打印所有年份的所有交易信息
void PrintOneYear(FINANCE* per);//执行菜单命令3，打印某一年的所有交易信息，包括该年交易明细及调用OneYearBalance函数输出交易统计

int main()
{
    char key;
    int i;

    i = 0;

    while (1)
    {
        Menu();
        key = bioskey();
        fflush(stdin);   //清空缓冲区
        switch (key)
        {
        case '1':  InputOneDeal(person + i);
            i++;
            break;
        case '2':  PrintBalance(person);
            break;
        case '3':  PrintOneYear(person);
            break;
        case '4':  exit(0);
        default:  break;
        }
    }
}

//获取系统日期，存入pd所指的Date结构体中
void getdate(Date* pd)
{
    SYSTEMTIME st;
    GetSystemTime(&st);
    pd->da_day = st.wDay;
    pd->da_mon = st.wMonth;
    pd->da_year = st.wYear;
}
//获取系统时间，存入pt所指的Time结构体中
void gettime(Time* pt)
{
    SYSTEMTIME st;
    GetSystemTime(&st);
    pt->ti_hour = st.wHour;
    pt->ti_min = st.wMinute;
    pt->ti_sec = st.wSecond;

}
void GetDateTime(FINANCE* per)//调用getdate与gettime函数将获取的时间日期存入per所指的结构体变量中
{
    getdate(&per->dt);
    printf("%d/%02d/%02d ", per->dt.da_year, per->dt.da_mon, per->dt.da_day);
    gettime(&per->ti);
    printf("%02d:%02d:%02d :", per->ti.ti_hour, per->ti.ti_min, per->ti.ti_sec);
}
void Menu()//显示系统菜单
{
    printf("1.Input One deal\n2.Print All the Balance\n3.Print One year Balance\n4.Exit to DOS\n");
}
char bioskey() //返回用户输入的菜单命令
{
    char n[5];
    scanf("%1s", n);
    return n[0];
}
void InputOneDeal(FINANCE* per)  //执行菜单命令1，输入一笔交易，存入结构体per所指的结构体变量中。注意当输入为整数的时候存入earning中，输入为负数的时候存入payout中。
{
    double money;
    printf("Please input one deal (+/-):\n");
    GetDateTime(per);
    scanf("%lf", &money);
    if (money < 0)
        per->payout = money;
    else
        per->earning = money;
}
double Balance(FINANCE* per)//返回账户中余额。账户person数组中的所有收入与支出之差。
{
    int i = 0;
    double sum1 = 0, sum2 = 0;
    for (i = 0; i < DEAL; i++)
    {
        sum1 += (per + i)->earning;
        sum2 += (per + i)->payout;

    }
    return sum1 + sum2;
}
void OneYearBalance(FINANCE* per, int year) //打印某一年的交易信息统计
{
    int i = 0;
    double sum1 = 0, sum2 = 0;
    for (i = 0; i < DEAL; i++)
    {
        if (per[i].dt.da_year != year)//if(year!=(per+i)->da.da_year)
            continue;
        sum1 += (per + i)->earning;
        sum2 += (per + i)->payout;
       
    }
    printf("Param of %d\n", year);
    printf(" Sum of earning       Sum of payout           Balance\n");
    printf("%15.2lf%19.2lf%19.2lf\n", sum1, sum2, sum1 + sum2);
}
void PrintBalance(FINANCE* per)//执行菜单命令2，打印所有年份的所有交易信息
{
    int i = 0;
    printf("  Date       Time      Earning     Payout    Balance\n");
    printf("-----------------------------------------------------\n");
    for (i = 0; i < DEAL; i++)
    {
        if (per[i].dt.da_year != 0)
        {
            printf("%d/%02d/%02d ", per->dt.da_year, per->dt.da_mon, per->dt.da_day);
            printf("%02d:%02d:%02d ", per->ti.ti_hour, per->ti.ti_min, per->ti.ti_sec);

        }
        if (per[i].earning != 0)
        {
            printf("%10.2lf\n", per[i].earning);
        }
        if (per[i].payout != 0)
        {
            printf("%21.2lf\n", per[i].payout);
        }
    }
    printf("-----------------------------------------------------\n");
    printf("                                           %10.2f\n", Balance(per));
}
void PrintOneYear(FINANCE* per)//执行菜单命令3，打印某一年的所有交易信息，包括该年交易明细及调用OneYearBalance函数输出交易统计
{
    int i = 0;
    int year;
    printf("Please Input one year:");
    scanf("%d", &year);
    printf("  Date       Time      Earning     Payout    \n");
    printf("---------------------------------------------\n");
    for (i = 0; i < DEAL; i++)
    {
        if (per[i].dt.da_year == year)
        {
            printf("%d/%02d/%02d ", per->dt.da_year, per->dt.da_mon, per->dt.da_day);
            printf("%02d:%02d:%02d ", per->ti.ti_hour, per->ti.ti_min, per->ti.ti_sec);

        }
        if (per[i].earning != 0)
        {
            printf("%10.2lf\n", per[i].earning);
        }
        if (per[i].payout != 0)
        {
            printf("%21.2lf\n", per[i].payout);
        }
    }
    printf("---------------------------------------------\n");
    OneYearBalance(per, year);
}
